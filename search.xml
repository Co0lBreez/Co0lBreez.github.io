<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>搭建个人Blog的一些代码指令集</title>
      <link href="/2022/07/31/da-jian-ge-ren-blog-de-yi-xie-dai-ma-zhi-ling-ji/"/>
      <url>/2022/07/31/da-jian-ge-ren-blog-de-yi-xie-dai-ma-zhi-ling-ji/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>本博客系统基于 GitHub Pages+Hexo 搭建。</p><p>本文主要是些命令（Git、Hexo）的集合，并不起指导作用，只是事后整理出来，供个人备忘。</p><h2 id="基本流程"><a href="#基本流程" class="headerlink" title="基本流程"></a>基本流程</h2><table><thead><tr><th>配置 Git</th><th>创建库（GitHub）</th><th>连接库</th><th>配置 Hexo</th><th>部署 Hexo</th><th>自定义</th><th>完成</th></tr></thead><tbody><tr><td>-&gt;</td><td>-&gt;</td><td>-&gt;</td><td>-&gt;</td><td>-&gt;</td><td>-&gt;</td><td></td></tr></tbody></table><p>上述流程又可简化为两步</p><table><thead><tr><th>Git 与 GitHub 库的连接</th><th>Hexo 的配置与部署</th></tr></thead><tbody><tr><td>-&gt;</td><td></td></tr></tbody></table><h2 id="代码命令行"><a href="#代码命令行" class="headerlink" title="代码命令行"></a>代码命令行</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 本地用户名</span><span class="token function">git</span> config --global user.name <span class="token string">"Co0lBreez"</span><span class="token comment"># 本地用户邮箱</span><span class="token function">git</span> config --global user.email  <span class="token string">"asmortal@qq.com"</span><span class="token comment"># 密钥</span>ssh-keygen -t rsa -C <span class="token string">"asmortal@qq.com"</span><span class="token comment"># 验证连接</span><span class="token function">ssh</span> -T git@github.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Git 初始化</span><span class="token function">git</span> init<span class="token comment"># 提交文件（非上传）</span><span class="token function">git</span> <span class="token function">add</span> README.md<span class="token comment"># git add . (add 当前目录下所有文件)</span><span class="token comment">#对提交进行备注</span><span class="token function">git</span> commit -m <span class="token string">"备注内容"</span><span class="token comment">#连接到远程仓库</span><span class="token function">git</span> remote <span class="token function">add</span> origin git@github.com:Co0lBreez/Co0lBreez.github.io.git<span class="token comment"># 上传提交的文件</span><span class="token function">git</span> push -u origin master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-cli -ghexo init blog<span class="token builtin class-name">cd</span> blog<span class="token function">npm</span> <span class="token function">install</span>hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在本地部署OK后（<code>hexo server</code> 命令访问<a href="http://localhost:4000/">http://localhost:4000/</a> 没有问题）</p><p>1.安装 hexo-deployer-git（部署插件）</p>   <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2.修改_config.yml文件（为了能让 Hexo 能部署到 GitHub Pages 上）</p> <pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">deploy</span><span class="token punctuation">:</span>    <span class="token key atrule">type</span><span class="token punctuation">:</span> git  <span class="token key atrule">repo</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//github.com/Co0lBreez/Co0lBreez.github.io.git<span class="token comment"># 库（repository）的地址</span>  <span class="token key atrule">branch</span><span class="token punctuation">:</span> master<span class="token comment">#分支（branch）名</span>  <span class="token key atrule">message</span><span class="token punctuation">:</span> <span class="token key atrule">我崩溃了(〃￣︶￣)</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> now('YYYY<span class="token punctuation">-</span>MM<span class="token punctuation">-</span>DD HH<span class="token punctuation">:</span>mm<span class="token punctuation">:</span>ss') <span class="token punctuation">}</span><span class="token punctuation">}</span>)<span class="token comment"># 自定义提交信息</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>   3.更新与部署</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo clean<span class="token comment"># hexo c 清除缓存文件 (db.json) 和已生成的静态文件 (public)</span>hexo generate<span class="token comment"># hexo g 生成静态文件</span>hexo deploy<span class="token comment"># hexo d 部署网站</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="常见报错的处理"><a href="#常见报错的处理" class="headerlink" title="常见报错的处理"></a>常见报错的处理</h2><blockquote><p>error: failed to push some refsto ‘远程仓库地址’</p></blockquote><p>执行以下命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> pull --rebase origin master<span class="token comment"># 拉取</span><span class="token function">git</span> push -u origin master<span class="token comment">#推送</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="一些帮助文档"><a href="#一些帮助文档" class="headerlink" title="一些帮助文档"></a>一些帮助文档</h2><p><a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md">https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md</a></p><p><a href="https://hexo.io/zh-cn/docs/">https://hexo.io/zh-cn/docs/</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 代码指令集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于本站</title>
      <link href="/2022/07/31/about-the-site/"/>
      <url>/2022/07/31/about-the-site/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="关于本站"><a href="#关于本站" class="headerlink" title="关于本站"></a>关于本站</h2><p>本站是基于 Hexo 与 GitHub Pages 搭建而成的个人博客。</p><p>GitHub Pages 可以简单地理解为一个免费且稳定的服务器；而 Hexo 则是一种成熟的博客框架。所以拿来用就行（我他妈直接白嫖）。(～￣▽￣)～</p><p>搭建是照着视频、文字教程搞的。包括下载软件、配置环境、安装插件、自定义设置……</p><p>敲了无数次的代码与命令行，</p><p>遇到过各种报错，</p><p>Ctrl C Ctrl V 于浏览器与本地间，</p><p>查问题，copy 代码，</p><p>各种重装， Remake ……</p><p>心累……😑</p><p>搭建个人博客其实还有另一种更简单的方案，那就是 Jekyll+GitHub Pages 。相当于是把代码复制到自己的库，改几行代码就能用。之前我用的就是 Jekyll+GitHub Pages ，而且成功搭建了一个站出来。但是UI风格这些吧，说实话不太对我胃口，而且我自已也没有改的能力，找主题吧也没找到合适的。</p><p>找到了个合适的主题后吧，发现是 Hexo 的，然后就开始了上述的折腾。最后终于还是让我给折腾了出来。</p><h2 id="关于主题与作者"><a href="#关于主题与作者" class="headerlink" title="关于主题与作者"></a>关于主题与作者</h2><p>主题：<a href="https://github.com/blinkfox/hexo-theme-matery">https://github.com/blinkfox/hexo-theme-matery</a></p><p>作者：<a href="https://github.com/blinkfox">闪烁之狐 (blinkfox)</a></p><h2 id="关于-GitHub-Pages"><a href="#关于-GitHub-Pages" class="headerlink" title="关于 GitHub Pages"></a>关于 GitHub Pages</h2><p>这玩意儿白给、免费。但相应的，给的带宽和流量就小得可怜了，所以几M的图片，它能加载几十秒，甚至一两分钟。纯文本无图，少图的话倒是加载很快，但这样就太朴实无华了，不花哨、不合我心意。</p><p>所以站内可见、不可见的图片基本都经过了我的手动压缩，一律阉割到了720P-（横竖图的宽高噶为1280px），这也是无奈之举。要不就得牺牲访问速度，可能进来几分钟都在转圈。</p><p>可是这样也快不到哪儿去，初次加载时可能也会很折磨。但是老话说得好：</p><blockquote><p>“又不是不能用~”</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 开始 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
